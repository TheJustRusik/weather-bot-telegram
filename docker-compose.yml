version: "3.8"
name: weather-bot

services:
  weather_database:
    container_name: weather-bot-database
    image: postgres:14.7-alpine
    environment:
      POSTGRES_USER: main_user
      POSTGRES_PASSWORD: super_password
      POSTGRES_DB: main_db
    ports:
      - "5432:5432"
    volumes:
      - main-db-data:/var/lib/postgresql/data
    restart: unless-stopped
  weather-fetcher:
    container_name: weather-bot-fetcher
    build:
      context: .
      dockerfile: weather-fetcher/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - weather_database
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://weather_database/main_db
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
  weather-tgbot:
    container_name: weather-bot-tgbot
    build:
      context: .
      dockerfile: weather-tgbot/Dockerfile
    depends_on:
      - weather_database
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://weather_database/main_db
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.5
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "2181" ]
      interval: 10s
      timeout: 3s
      retries: 3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
  kafka:
    image: confluentinc/cp-kafka:7.5.5
    container_name: kafffka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "29092:29092"
      - "9092:9092"
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "29092" ]
      interval: 10s
      timeout: 3s
      retries: 3
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: OUTSIDE://:29092,INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: OUTSIDE://kafffka:29092,INTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8081:8080"
    restart: always
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafffka:29092



volumes:
  main-db-data:
